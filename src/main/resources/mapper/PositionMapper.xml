<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.guyuan.manager.dao.PositionMapper">

<!--    <resultMap id="PositionResultMap" type="com.guyuan.manager.dao.po.PositionPO">-->
<!--        <id property="id" column="id"/>-->
<!--        <result property="teamId" column="team_id"/>-->
<!--        <result property="positionName" column="position_name"/>-->
<!--        <result property="positionId" column="position_id"/>-->
<!--        <result property="createBy" column="create_by"/>-->
<!--        <result property="createTime" column="create_time"/>-->
<!--        <result property="updateBy" column="update_by"/>-->
<!--        <result property="updateTime" column="update_time"/>-->
<!--    </resultMap>-->

    <insert id="addPositionsToMember" parameterType="java.util.List">
        insert into user_position (user_id,position_id,team_id,create_by,update_by) values
        <foreach collection="positionIds" item="positionId" separator=",">
            (#{memberId},#{positionId},#{teamId},#{userId},#{userId})
        </foreach>
    </insert>

    <insert id="addPositionToUser">
        insert into user_position (user_id, position_id, team_id, create_by, update_by) values
        <foreach collection="positions" item="position" separator=",">
        (#{userId}, #{position.positionId}, #{position.teamId}, #{operatorId}, #{operatorId})
        </foreach>
    </insert>

    <update id="deletePositionWithUser">
        update user_position set is_deleted = 1
        where user_id = #{userId} and position_id in
        <foreach collection="positions" item="position" separator="," open="(" close=")">
            #{position.positionId}
        </foreach>
            and is_deleted = 0
    </update>

    <update id="deletePositionByUserId">
        update user_position set is_deleted = 1
        where user_id = #{userId}
        and is_deleted = 0
    </update>

    <insert id="addPosition" parameterType="com.guyuan.manager.dao.po.PositionPO">
        insert into `position` (position_id,position_name,level,subordinate,team_id) values
        <foreach collection="positionPOList" item="position" separator=",">
             (#{position.positionId},#{position.positionName},#{position.level},#{position.subordinate},#{position.teamId})
        </foreach>
    </insert>

    <insert id="addUsersToPosition">
        insert into user_position (user_id, position_id) values
        <foreach collection="userIds" item="userId" separator=",">
            (#{userId},#{positionId})
        </foreach>
    </insert>

    <update id="deletePositionInPosition">
        update position set is_deleted = 1
        where (position_id in
        <foreach collection="positionsToDelete" item="positionId" separator="," open="(" close=")" >
            #{positionId}
        </foreach>
                or subordinate in
        <foreach collection="positionsToDelete" item="positionId" separator="," open="(" close=")" >
            #{positionId}
        </foreach>)
                and is_deleted = 0
    </update>

    <update id="deletePositionInUserPosition">
        update user_position set is_deleted = 1
        where position_id in
        <foreach collection="positionsToDelete" item="positionId" separator="," open="(" close=")" >
            #{positionId}
        </foreach>
                and is_deleted = 0
    </update>

    <select id="listSubordinateByPositionId" resultType="com.guyuan.manager.dao.po.PositionPO">
        select id,position_id,position_name,level,subordinate,team_id,
                create_by,create_time,update_by,update_time
        from position
        where position_id in (select subordinate
                                from position
                                where position_id = #{positionId}
                                        and is_deleted = 0)
                and subordinate = '' and is_deleted = 0
        order by id
    </select>

    <select id="getPositionByPositionId" resultType="com.guyuan.manager.dao.po.PositionPO">
        select id,position_id,position_name,level,subordinate,team_id,
                create_by,create_time,update_by,update_time
        from position
        where position_id = #{positionId}
                and subordinate = ''
                and is_deleted = 0
    </select>

    <select id="getParentPositionByPositionId" resultType="com.guyuan.manager.dao.po.PositionPO">
        select id,position_id,position_name,level,subordinate,team_id,
                create_by,create_time,update_by,update_time
        from position
        where subordinate = #{positionId}
                and is_deleted = 0
    </select>

    <select id="listUserIdsByPositionIds" resultType="java.lang.String">
        select user_id
        from user_position
        where position_id in
        <foreach collection="positionIds" item="positionId" separator="," open="(" close=")" >
            #{positionId}
        </foreach>
            and is_deleted = 0
        group by user_id
    </select>

    <select id="listParentPositionByPositions" resultType="com.guyuan.manager.dao.po.PositionPO">
        select id,position_id,position_name,level,subordinate,team_id,
                create_by,create_time,update_by,update_time
        from position
        where subordinate in
        <foreach collection="positions" item="position" separator="," open="(" close=")">
                #{position.positionId}
        </foreach>
                and is_deleted = 0
    </select>

    <select id="listPositionByUserId" resultType="com.guyuan.manager.dao.po.PositionPO">
        select t1.id,t1.position_id,t1.position_name,t1.level,t1.subordinate,t1.team_id,
                t1.create_by,t1.create_time,t1.update_by,t1.update_time
        from position as t1, user_position as t2
        where t2.user_id = #{userId}
                and t1.position_id = t2.position_id
                and t1.subordinate = ''
                and t1.is_deleted = 0
                and t2.is_deleted = 0
    </select>

    <select id="listTeamByUserId" resultType="com.guyuan.manager.dao.po.PositionPO">
        select t1.id,t1.position_id,t1.position_name,t1.level,t1.subordinate,
                t1.create_by,t1.create_time,t1.update_by,t1.update_time
        from position as t1, member as t2
        where t2.user_id = #{userId}
                and t1.position_id = t2.team_id
                and subordinate = ''
                and t1.is_deleted = 0
                and t2.is_deleted = 0
    </select>

    <select id="listPositionIdAndTeamIdByNames" resultType="com.guyuan.manager.dao.po.PositionPO">
        select t1.position_id, t1.team_id
        from position as t1, position as t2
        where t1.team_id = t2.position_id  and (t1.position_name, t2.position_name) in
        <foreach collection="positions"  item="position" separator="," open="(" close=")">
            (#{position.positionName}, #{position.teamName})
        </foreach>
                and t1.is_deleted = 0
                and t2.is_deleted = 0
        group by t1.position_id, t1.team_id
    </select>

    <select id="listTeamIdByNames" resultType="java.lang.String">
        select position_id from position
        where position_name in
        <foreach collection="teamNames" item="teamName" separator="," open="(" close=")" >
            #{teamName}
        </foreach>
                and is_deleted = 0
        group by position_id
    </select>

</mapper>